   Compiling barter-data v0.10.2 (/var/tmp/vibe-kanban/worktrees/vk-a8c3-barter-rs/barter-data)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 14.67s
     Running `target/debug/examples/simple_test_all_exchanges`

========================================
Barter-RS Exchange Monitoring Test
========================================
Testing: Binance, OKX, Bybit
Pairs: BTC/USDT, ETH/USDT
Data: Public Trades only
Duration: 30 seconds
========================================

[2m2025-08-31T12:37:52.513268Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Initializing streams...
[2m2025-08-31T12:37:52.513665Z[0m [32m INFO[0m [2mbarter_data::streams::consumer[0m[2m:[0m MarketStream with auto reconnect initialising [3mexchange[0m[2m=[0mBinanceSpot [3msubscriptions[0m[2m=[0m(btc_usdt_spot, public_trades),(eth_usdt_spot, public_trades) [3mpolicy[0m[2m=[0mReconnectionBackoffPolicy { backoff_ms_initial: 125, backoff_multiplier: 2, backoff_ms_max: 60000 } [3mstream_key[0m[2m=[0mmarket_stream-BinanceSpot-public_trades
[2m2025-08-31T12:37:52.513971Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m subscribing to WebSocket [3mexchange[0m[2m=[0mBinanceSpot [3murl[0m[2m=[0mwss://stream.binance.com:9443/ws [3msubscriptions[0m[2m=[0m[Subscription { exchange: Binance { server: PhantomData<barter_data::exchange::binance::spot::BinanceServerSpot> }, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }, Subscription { exchange: Binance { server: PhantomData<barter_data::exchange::binance::spot::BinanceServerSpot> }, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }]
[2m2025-08-31T12:37:52.514073Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m attempting to establish WebSocket connection [3mrequest[0m[2m=[0mUrl { scheme: "wss", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("stream.binance.com")), port: Some(9443), path: "/ws", query: None, fragment: None }
[2m2025-08-31T12:37:52.514706Z[0m [32m INFO[0m [2mbarter_data::streams::consumer[0m[2m:[0m MarketStream with auto reconnect initialising [3mexchange[0m[2m=[0mBinanceFuturesUsd [3msubscriptions[0m[2m=[0m(btc_usdt_perpetual, public_trades),(eth_usdt_perpetual, public_trades) [3mpolicy[0m[2m=[0mReconnectionBackoffPolicy { backoff_ms_initial: 125, backoff_multiplier: 2, backoff_ms_max: 60000 } [3mstream_key[0m[2m=[0mmarket_stream-BinanceFuturesUsd-public_trades
[2m2025-08-31T12:37:52.514815Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m subscribing to WebSocket [3mexchange[0m[2m=[0mBinanceFuturesUsd [3murl[0m[2m=[0mwss://fstream.binance.com/ws [3msubscriptions[0m[2m=[0m[Subscription { exchange: Binance { server: PhantomData<barter_data::exchange::binance::futures::BinanceServerFuturesUsd> }, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }, Subscription { exchange: Binance { server: PhantomData<barter_data::exchange::binance::futures::BinanceServerFuturesUsd> }, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }]
[2m2025-08-31T12:37:52.514855Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m attempting to establish WebSocket connection [3mrequest[0m[2m=[0mUrl { scheme: "wss", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("fstream.binance.com")), port: None, path: "/ws", query: None, fragment: None }
[2m2025-08-31T12:37:52.515168Z[0m [32m INFO[0m [2mbarter_data::streams::consumer[0m[2m:[0m MarketStream with auto reconnect initialising [3mexchange[0m[2m=[0mOkx [3msubscriptions[0m[2m=[0m(btc_usdt_spot, public_trades),(btc_usdt_perpetual, public_trades),(eth_usdt_spot, public_trades),(eth_usdt_perpetual, public_trades) [3mpolicy[0m[2m=[0mReconnectionBackoffPolicy { backoff_ms_initial: 125, backoff_multiplier: 2, backoff_ms_max: 60000 } [3mstream_key[0m[2m=[0mmarket_stream-Okx-public_trades
[2m2025-08-31T12:37:52.515290Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m subscribing to WebSocket [3mexchange[0m[2m=[0mOkx [3murl[0m[2m=[0mwss://ws.okx.com:8443/ws/v5/public [3msubscriptions[0m[2m=[0m[Subscription { exchange: Okx, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }, Subscription { exchange: Okx, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }, Subscription { exchange: Okx, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }, Subscription { exchange: Okx, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }]
[2m2025-08-31T12:37:52.515329Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m attempting to establish WebSocket connection [3mrequest[0m[2m=[0mUrl { scheme: "wss", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("ws.okx.com")), port: Some(8443), path: "/ws/v5/public", query: None, fragment: None }
[2m2025-08-31T12:37:52.515606Z[0m [32m INFO[0m [2mbarter_data::streams::consumer[0m[2m:[0m MarketStream with auto reconnect initialising [3mexchange[0m[2m=[0mBybitSpot [3msubscriptions[0m[2m=[0m(btc_usdt_spot, public_trades),(eth_usdt_spot, public_trades) [3mpolicy[0m[2m=[0mReconnectionBackoffPolicy { backoff_ms_initial: 125, backoff_multiplier: 2, backoff_ms_max: 60000 } [3mstream_key[0m[2m=[0mmarket_stream-BybitSpot-public_trades
[2m2025-08-31T12:37:52.515713Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m subscribing to WebSocket [3mexchange[0m[2m=[0mBybitSpot [3murl[0m[2m=[0mwss://stream.bybit.com/v5/public/spot [3msubscriptions[0m[2m=[0m[Subscription { exchange: Bybit { server: PhantomData<barter_data::exchange::bybit::spot::BybitServerSpot> }, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }, Subscription { exchange: Bybit { server: PhantomData<barter_data::exchange::bybit::spot::BybitServerSpot> }, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }]
[2m2025-08-31T12:37:52.515749Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m attempting to establish WebSocket connection [3mrequest[0m[2m=[0mUrl { scheme: "wss", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("stream.bybit.com")), port: None, path: "/v5/public/spot", query: None, fragment: None }
[2m2025-08-31T12:37:52.516028Z[0m [32m INFO[0m [2mbarter_data::streams::consumer[0m[2m:[0m MarketStream with auto reconnect initialising [3mexchange[0m[2m=[0mBybitPerpetualsUsd [3msubscriptions[0m[2m=[0m(btc_usdt_perpetual, public_trades),(eth_usdt_perpetual, public_trades) [3mpolicy[0m[2m=[0mReconnectionBackoffPolicy { backoff_ms_initial: 125, backoff_multiplier: 2, backoff_ms_max: 60000 } [3mstream_key[0m[2m=[0mmarket_stream-BybitPerpetualsUsd-public_trades
[2m2025-08-31T12:37:52.516136Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m subscribing to WebSocket [3mexchange[0m[2m=[0mBybitPerpetualsUsd [3murl[0m[2m=[0mwss://stream.bybit.com/v5/public/linear [3msubscriptions[0m[2m=[0m[Subscription { exchange: Bybit { server: PhantomData<barter_data::exchange::bybit::futures::BybitServerPerpetualsUsd> }, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }, Subscription { exchange: Bybit { server: PhantomData<barter_data::exchange::bybit::futures::BybitServerPerpetualsUsd> }, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }]
[2m2025-08-31T12:37:52.516172Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m attempting to establish WebSocket connection [3mrequest[0m[2m=[0mUrl { scheme: "wss", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("stream.bybit.com")), port: None, path: "/v5/public/linear", query: None, fragment: None }
[2m2025-08-31T12:37:52.710938Z[0m [34mDEBUG[0m [2mtungstenite::handshake::client[0m[2m:[0m Client handshake done.
[2m2025-08-31T12:37:52.711063Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m connected to WebSocket [3mexchange[0m[2m=[0mBinanceFuturesUsd [3msubscriptions[0m[2m=[0m[Subscription { exchange: Binance { server: PhantomData<barter_data::exchange::binance::futures::BinanceServerFuturesUsd> }, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }, Subscription { exchange: Binance { server: PhantomData<barter_data::exchange::binance::futures::BinanceServerFuturesUsd> }, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }]
[2m2025-08-31T12:37:52.711212Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m sending exchange subscription [3mexchange[0m[2m=[0mBinanceFuturesUsd [3mpayload[0m[2m=[0mText(Utf8Bytes(b"{\"id\":1,\"method\":\"SUBSCRIBE\",\"params\":[\"btcusdt@trade\",\"ethusdt@trade\"]}"))
[2m2025-08-31T12:37:52.768246Z[0m [34mDEBUG[0m [2mtungstenite::handshake::client[0m[2m:[0m Client handshake done.
[2m2025-08-31T12:37:52.768326Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m connected to WebSocket [3mexchange[0m[2m=[0mBinanceSpot [3msubscriptions[0m[2m=[0m[Subscription { exchange: Binance { server: PhantomData<barter_data::exchange::binance::spot::BinanceServerSpot> }, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }, Subscription { exchange: Binance { server: PhantomData<barter_data::exchange::binance::spot::BinanceServerSpot> }, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }]
[2m2025-08-31T12:37:52.768432Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m sending exchange subscription [3mexchange[0m[2m=[0mBinanceSpot [3mpayload[0m[2m=[0mText(Utf8Bytes(b"{\"id\":1,\"method\":\"SUBSCRIBE\",\"params\":[\"btcusdt@trade\",\"ethusdt@trade\"]}"))
[2m2025-08-31T12:37:52.823974Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m received valid Ok subscription response [3mexchange[0m[2m=[0mBinanceFuturesUsd [3msuccess_responses[0m[2m=[0m1 [3mexpected_responses[0m[2m=[0m1 [3mpayload[0m[2m=[0mBinanceSubResponse { result: None, id: 1 }
[2m2025-08-31T12:37:52.824025Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m validated exchange WebSocket subscriptions [3mexchange[0m[2m=[0mBinanceFuturesUsd
[2m2025-08-31T12:37:52.824047Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m successfully initialised WebSocket stream with confirmed Subscriptions [3mexchange[0m[2m=[0mBinanceFuturesUsd
[2m2025-08-31T12:37:52.824357Z[0m [32m INFO[0m [2mbarter_data::streams::reconnect::stream[0m[2m:[0m successfully initialised Stream [3mattempt[0m[2m=[0m0 [3mstream_key[0m[2m=[0mmarket_stream-BinanceFuturesUsd-public_trades
[2m2025-08-31T12:37:52.931739Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m received valid Ok subscription response [3mexchange[0m[2m=[0mBinanceSpot [3msuccess_responses[0m[2m=[0m1 [3mexpected_responses[0m[2m=[0m1 [3mpayload[0m[2m=[0mBinanceSubResponse { result: None, id: 1 }
[2m2025-08-31T12:37:52.931811Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m validated exchange WebSocket subscriptions [3mexchange[0m[2m=[0mBinanceSpot
[2m2025-08-31T12:37:52.931833Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m successfully initialised WebSocket stream with confirmed Subscriptions [3mexchange[0m[2m=[0mBinanceSpot
[2m2025-08-31T12:37:52.932046Z[0m [32m INFO[0m [2mbarter_data::streams::reconnect::stream[0m[2m:[0m successfully initialised Stream [3mattempt[0m[2m=[0m0 [3mstream_key[0m[2m=[0mmarket_stream-BinanceSpot-public_trades
[2m2025-08-31T12:37:53.035200Z[0m [34mDEBUG[0m [2mtungstenite::handshake::client[0m[2m:[0m Client handshake done.
[2m2025-08-31T12:37:53.035305Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m connected to WebSocket [3mexchange[0m[2m=[0mOkx [3msubscriptions[0m[2m=[0m[Subscription { exchange: Okx, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }, Subscription { exchange: Okx, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }, Subscription { exchange: Okx, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }, Subscription { exchange: Okx, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }]
[2m2025-08-31T12:37:53.035497Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m sending exchange subscription [3mexchange[0m[2m=[0mOkx [3mpayload[0m[2m=[0mText(Utf8Bytes(b"{\"args\":[{\"channel\":\"trades\",\"instId\":\"BTC-USDT\"},{\"channel\":\"trades\",\"instId\":\"BTC-USDT-SWAP\"},{\"channel\":\"trades\",\"instId\":\"ETH-USDT\"},{\"channel\":\"trades\",\"instId\":\"ETH-USDT-SWAP\"}],\"op\":\"subscribe\"}"))
[2m2025-08-31T12:37:53.041364Z[0m [34mDEBUG[0m [2mtungstenite::handshake::client[0m[2m:[0m Client handshake done.
[2m2025-08-31T12:37:53.041450Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m connected to WebSocket [3mexchange[0m[2m=[0mBybitSpot [3msubscriptions[0m[2m=[0m[Subscription { exchange: Bybit { server: PhantomData<barter_data::exchange::bybit::spot::BybitServerSpot> }, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }, Subscription { exchange: Bybit { server: PhantomData<barter_data::exchange::bybit::spot::BybitServerSpot> }, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Spot }, kind: PublicTrades }]
[2m2025-08-31T12:37:53.041562Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m sending exchange subscription [3mexchange[0m[2m=[0mBybitSpot [3mpayload[0m[2m=[0mText(Utf8Bytes(b"{\"args\":[\"publicTrade.BTCUSDT\",\"publicTrade.ETHUSDT\"],\"op\":\"subscribe\"}"))
[2m2025-08-31T12:37:53.042640Z[0m [34mDEBUG[0m [2mtungstenite::handshake::client[0m[2m:[0m Client handshake done.
[2m2025-08-31T12:37:53.042731Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m connected to WebSocket [3mexchange[0m[2m=[0mBybitPerpetualsUsd [3msubscriptions[0m[2m=[0m[Subscription { exchange: Bybit { server: PhantomData<barter_data::exchange::bybit::futures::BybitServerPerpetualsUsd> }, instrument: MarketDataInstrument { base: AssetNameInternal("btc"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }, Subscription { exchange: Bybit { server: PhantomData<barter_data::exchange::bybit::futures::BybitServerPerpetualsUsd> }, instrument: MarketDataInstrument { base: AssetNameInternal("eth"), quote: AssetNameInternal("usdt"), kind: Perpetual }, kind: PublicTrades }]
[2m2025-08-31T12:37:53.042840Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m sending exchange subscription [3mexchange[0m[2m=[0mBybitPerpetualsUsd [3mpayload[0m[2m=[0mText(Utf8Bytes(b"{\"args\":[\"publicTrade.BTCUSDT\",\"publicTrade.ETHUSDT\"],\"op\":\"subscribe\"}"))
[2m2025-08-31T12:37:53.150267Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m received valid Ok subscription response [3mexchange[0m[2m=[0mOkx [3msuccess_responses[0m[2m=[0m1 [3mexpected_responses[0m[2m=[0m4 [3mpayload[0m[2m=[0mSubscribed
[2m2025-08-31T12:37:53.150383Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m received valid Ok subscription response [3mexchange[0m[2m=[0mOkx [3msuccess_responses[0m[2m=[0m2 [3mexpected_responses[0m[2m=[0m4 [3mpayload[0m[2m=[0mSubscribed
[2m2025-08-31T12:37:53.150471Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m received valid Ok subscription response [3mexchange[0m[2m=[0mOkx [3msuccess_responses[0m[2m=[0m3 [3mexpected_responses[0m[2m=[0m4 [3mpayload[0m[2m=[0mSubscribed
[2m2025-08-31T12:37:53.150546Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m received valid Ok subscription response [3mexchange[0m[2m=[0mOkx [3msuccess_responses[0m[2m=[0m4 [3mexpected_responses[0m[2m=[0m4 [3mpayload[0m[2m=[0mSubscribed
[2m2025-08-31T12:37:53.150578Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m validated exchange WebSocket subscriptions [3mexchange[0m[2m=[0mOkx
[2m2025-08-31T12:37:53.150601Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m successfully initialised WebSocket stream with confirmed Subscriptions [3mexchange[0m[2m=[0mOkx
[2m2025-08-31T12:37:53.150817Z[0m [32m INFO[0m [2mbarter_data::streams::reconnect::stream[0m[2m:[0m successfully initialised Stream [3mattempt[0m[2m=[0m0 [3mstream_key[0m[2m=[0mmarket_stream-Okx-public_trades
[2m2025-08-31T12:37:53.151987Z[0m [34mDEBUG[0m [2mbarter_data[0m[2m:[0m sending custom application-level ping to exchange [3mexchange[0m[2m=[0mOkx [3mpayload[0m[2m=[0mping
[2m2025-08-31T12:37:53.161450Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m received valid Ok subscription response [3mexchange[0m[2m=[0mBybitSpot [3msuccess_responses[0m[2m=[0m1 [3mexpected_responses[0m[2m=[0m1 [3mpayload[0m[2m=[0mBybitResponse { success: true, ret_msg: Subscribe }
[2m2025-08-31T12:37:53.161505Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m validated exchange WebSocket subscriptions [3mexchange[0m[2m=[0mBybitSpot
[2m2025-08-31T12:37:53.161528Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m successfully initialised WebSocket stream with confirmed Subscriptions [3mexchange[0m[2m=[0mBybitSpot
[2m2025-08-31T12:37:53.161727Z[0m [32m INFO[0m [2mbarter_data::streams::reconnect::stream[0m[2m:[0m successfully initialised Stream [3mattempt[0m[2m=[0m0 [3mstream_key[0m[2m=[0mmarket_stream-BybitSpot-public_trades
[2m2025-08-31T12:37:53.162338Z[0m [34mDEBUG[0m [2mbarter_data[0m[2m:[0m sending custom application-level ping to exchange [3mexchange[0m[2m=[0mBybitSpot [3mpayload[0m[2m=[0m{"op":"ping"}
[2m2025-08-31T12:37:53.162480Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m received valid Ok subscription response [3mexchange[0m[2m=[0mBybitPerpetualsUsd [3msuccess_responses[0m[2m=[0m1 [3mexpected_responses[0m[2m=[0m1 [3mpayload[0m[2m=[0mBybitResponse { success: true, ret_msg: None }
[2m2025-08-31T12:37:53.162534Z[0m [34mDEBUG[0m [2mbarter_data::subscriber::validator[0m[2m:[0m validated exchange WebSocket subscriptions [3mexchange[0m[2m=[0mBybitPerpetualsUsd
[2m2025-08-31T12:37:53.162557Z[0m [34mDEBUG[0m [2mbarter_data::subscriber[0m[2m:[0m successfully initialised WebSocket stream with confirmed Subscriptions [3mexchange[0m[2m=[0mBybitPerpetualsUsd
[2m2025-08-31T12:37:53.162677Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Streams initialized successfully!
[2m2025-08-31T12:37:53.162659Z[0m [32m INFO[0m [2mbarter_data::streams::reconnect::stream[0m[2m:[0m successfully initialised Stream [3mattempt[0m[2m=[0m0 [3mstream_key[0m[2m=[0mmarket_stream-BybitPerpetualsUsd-public_trades
[2m2025-08-31T12:37:53.162701Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Starting data collection...

[2m2025-08-31T12:37:53.163826Z[0m [34mDEBUG[0m [2mbarter_data[0m[2m:[0m sending custom application-level ping to exchange [3mexchange[0m[2m=[0mBybitPerpetualsUsd [3mpayload[0m[2m=[0m{"op":"ping"}
[2m2025-08-31T12:37:53.202069Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 100 | Time: 0s | Rate: inf/s
[2m2025-08-31T12:37:53.202120Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4476.41, Amount: 1.6100, Side: Sell
[2m2025-08-31T12:37:53.261327Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m failed to deserialize WebSocket Message into domain specific Message [3merror[0m[2m=[0mError("expected value", line: 1, column: 1) [3mpayload[0m[2m=[0mUtf8Bytes(b"pong") [3maction[0m[2m=[0m"returning Some(Err(err))"
[2m2025-08-31T12:37:53.261512Z[0m [33m WARN[0m [2msimple_test_all_exchanges[0m[2m:[0m Stream error [3merror[0m[2m=[0mSocket("Deserialising JSON error: expected value at line 1 column 1 for payload: pong")
[2m2025-08-31T12:37:53.281239Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m failed to deserialize WebSocket Message into domain specific Message [3merror[0m[2m=[0mError("missing field `subscription_id`", line: 1, column: 94) [3mpayload[0m[2m=[0mUtf8Bytes(b"{\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"dfd416ec-0083-49ac-a67b-c2b2a77195b6\",\"op\":\"ping\"}") [3maction[0m[2m=[0m"returning Some(Err(err))"
[2m2025-08-31T12:37:53.281414Z[0m [33m WARN[0m [2msimple_test_all_exchanges[0m[2m:[0m Stream error [3merror[0m[2m=[0mSocket("Deserialising JSON error: missing field `subscription_id` at line 1 column 94 for payload: {\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"dfd416ec-0083-49ac-a67b-c2b2a77195b6\",\"op\":\"ping\"}")
[2m2025-08-31T12:37:53.284652Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m failed to deserialize WebSocket Message into domain specific Message [3merror[0m[2m=[0mError("missing field `subscription_id`", line: 1, column: 106) [3mpayload[0m[2m=[0mUtf8Bytes(b"{\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"0402319e-93a7-4ab0-8b83-3d20832c1752\",\"req_id\":\"\",\"op\":\"ping\"}") [3maction[0m[2m=[0m"returning Some(Err(err))"
[2m2025-08-31T12:37:53.284811Z[0m [33m WARN[0m [2msimple_test_all_exchanges[0m[2m:[0m Stream error [3merror[0m[2m=[0mSocket("Deserialising JSON error: missing field `subscription_id` at line 1 column 106 for payload: {\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"0402319e-93a7-4ab0-8b83-3d20832c1752\",\"req_id\":\"\",\"op\":\"ping\"}")
[2m2025-08-31T12:37:53.594815Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 200 | Time: 0s | Rate: inf/s
[2m2025-08-31T12:37:53.594880Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4476.27, Amount: 0.1500, Side: Buy
[2m2025-08-31T12:37:55.792543Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 300 | Time: 2s | Rate: 150.0/s
[2m2025-08-31T12:37:55.792607Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4476.90, Amount: 0.0060, Side: Sell
[2m2025-08-31T12:37:58.017642Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 400 | Time: 4s | Rate: 100.0/s
[2m2025-08-31T12:37:58.017708Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $108415.87, Amount: 0.0001, Side: Buy
[2m2025-08-31T12:37:58.162985Z[0m [34mDEBUG[0m [2mbarter_data[0m[2m:[0m sending custom application-level ping to exchange [3mexchange[0m[2m=[0mBybitSpot [3mpayload[0m[2m=[0m{"op":"ping"}
[2m2025-08-31T12:37:58.163343Z[0m [34mDEBUG[0m [2mbarter_data[0m[2m:[0m sending custom application-level ping to exchange [3mexchange[0m[2m=[0mBybitPerpetualsUsd [3mpayload[0m[2m=[0m{"op":"ping"}
[2m2025-08-31T12:37:58.282947Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m failed to deserialize WebSocket Message into domain specific Message [3merror[0m[2m=[0mError("missing field `subscription_id`", line: 1, column: 94) [3mpayload[0m[2m=[0mUtf8Bytes(b"{\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"dfd416ec-0083-49ac-a67b-c2b2a77195b6\",\"op\":\"ping\"}") [3maction[0m[2m=[0m"returning Some(Err(err))"
[2m2025-08-31T12:37:58.283084Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m failed to deserialize WebSocket Message into domain specific Message [3merror[0m[2m=[0mError("missing field `subscription_id`", line: 1, column: 106) [3mpayload[0m[2m=[0mUtf8Bytes(b"{\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"0402319e-93a7-4ab0-8b83-3d20832c1752\",\"req_id\":\"\",\"op\":\"ping\"}") [3maction[0m[2m=[0m"returning Some(Err(err))"
[2m2025-08-31T12:37:58.283162Z[0m [33m WARN[0m [2msimple_test_all_exchanges[0m[2m:[0m Stream error [3merror[0m[2m=[0mSocket("Deserialising JSON error: missing field `subscription_id` at line 1 column 94 for payload: {\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"dfd416ec-0083-49ac-a67b-c2b2a77195b6\",\"op\":\"ping\"}")
[2m2025-08-31T12:37:58.283242Z[0m [33m WARN[0m [2msimple_test_all_exchanges[0m[2m:[0m Stream error [3merror[0m[2m=[0mSocket("Deserialising JSON error: missing field `subscription_id` at line 1 column 106 for payload: {\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"0402319e-93a7-4ab0-8b83-3d20832c1752\",\"req_id\":\"\",\"op\":\"ping\"}")
[2m2025-08-31T12:37:59.236005Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 500 | Time: 6s | Rate: 83.3/s
[2m2025-08-31T12:37:59.236071Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $108381.30, Amount: 0.0110, Side: Buy
[2m2025-08-31T12:37:59.665988Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 600 | Time: 6s | Rate: 100.0/s
[2m2025-08-31T12:37:59.666053Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4479.38, Amount: 0.0288, Side: Sell
[2m2025-08-31T12:37:59.852433Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 700 | Time: 6s | Rate: 116.7/s
[2m2025-08-31T12:37:59.852477Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4479.12, Amount: 0.0012, Side: Sell
[2m2025-08-31T12:38:00.009555Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 800 | Time: 6s | Rate: 133.3/s
[2m2025-08-31T12:38:00.009616Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4478.99, Amount: 0.0012, Side: Sell
[2m2025-08-31T12:38:00.465959Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 900 | Time: 7s | Rate: 128.6/s
[2m2025-08-31T12:38:00.466022Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4478.86, Amount: 0.0008, Side: Sell
[2m2025-08-31T12:38:00.632242Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1000 | Time: 7s | Rate: 142.9/s
[2m2025-08-31T12:38:00.632304Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4476.18, Amount: 0.6800, Side: Sell
[2m2025-08-31T12:38:01.508689Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1100 | Time: 8s | Rate: 137.5/s
[2m2025-08-31T12:38:01.508752Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4476.01, Amount: 0.0210, Side: Sell
[2m2025-08-31T12:38:03.162308Z[0m [34mDEBUG[0m [2mbarter_data[0m[2m:[0m sending custom application-level ping to exchange [3mexchange[0m[2m=[0mBybitSpot [3mpayload[0m[2m=[0m{"op":"ping"}
[2m2025-08-31T12:38:03.163686Z[0m [34mDEBUG[0m [2mbarter_data[0m[2m:[0m sending custom application-level ping to exchange [3mexchange[0m[2m=[0mBybitPerpetualsUsd [3mpayload[0m[2m=[0m{"op":"ping"}
[2m2025-08-31T12:38:03.281433Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m failed to deserialize WebSocket Message into domain specific Message [3merror[0m[2m=[0mError("missing field `subscription_id`", line: 1, column: 94) [3mpayload[0m[2m=[0mUtf8Bytes(b"{\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"dfd416ec-0083-49ac-a67b-c2b2a77195b6\",\"op\":\"ping\"}") [3maction[0m[2m=[0m"returning Some(Err(err))"
[2m2025-08-31T12:38:03.281655Z[0m [33m WARN[0m [2msimple_test_all_exchanges[0m[2m:[0m Stream error [3merror[0m[2m=[0mSocket("Deserialising JSON error: missing field `subscription_id` at line 1 column 94 for payload: {\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"dfd416ec-0083-49ac-a67b-c2b2a77195b6\",\"op\":\"ping\"}")
[2m2025-08-31T12:38:03.283023Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m failed to deserialize WebSocket Message into domain specific Message [3merror[0m[2m=[0mError("missing field `subscription_id`", line: 1, column: 106) [3mpayload[0m[2m=[0mUtf8Bytes(b"{\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"0402319e-93a7-4ab0-8b83-3d20832c1752\",\"req_id\":\"\",\"op\":\"ping\"}") [3maction[0m[2m=[0m"returning Some(Err(err))"
[2m2025-08-31T12:38:03.283185Z[0m [33m WARN[0m [2msimple_test_all_exchanges[0m[2m:[0m Stream error [3merror[0m[2m=[0mSocket("Deserialising JSON error: missing field `subscription_id` at line 1 column 106 for payload: {\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"0402319e-93a7-4ab0-8b83-3d20832c1752\",\"req_id\":\"\",\"op\":\"ping\"}")
[2m2025-08-31T12:38:03.464187Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1200 | Time: 10s | Rate: 120.0/s
[2m2025-08-31T12:38:03.464254Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $108415.87, Amount: 0.0075, Side: Buy
[2m2025-08-31T12:38:07.147779Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m received Ping WebSocket message [3mpayload[0m[2m=[0mb"1756643887135"
[2m2025-08-31T12:38:07.170727Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1300 | Time: 14s | Rate: 92.9/s
[2m2025-08-31T12:38:07.170793Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4475.50, Amount: 0.2200, Side: Buy
[2m2025-08-31T12:38:08.163135Z[0m [34mDEBUG[0m [2mbarter_data[0m[2m:[0m sending custom application-level ping to exchange [3mexchange[0m[2m=[0mBybitPerpetualsUsd [3mpayload[0m[2m=[0m{"op":"ping"}
[2m2025-08-31T12:38:08.163195Z[0m [34mDEBUG[0m [2mbarter_data[0m[2m:[0m sending custom application-level ping to exchange [3mexchange[0m[2m=[0mBybitSpot [3mpayload[0m[2m=[0m{"op":"ping"}
[2m2025-08-31T12:38:08.285128Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m failed to deserialize WebSocket Message into domain specific Message [3merror[0m[2m=[0mError("missing field `subscription_id`", line: 1, column: 94) [3mpayload[0m[2m=[0mUtf8Bytes(b"{\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"dfd416ec-0083-49ac-a67b-c2b2a77195b6\",\"op\":\"ping\"}") [3maction[0m[2m=[0m"returning Some(Err(err))"
[2m2025-08-31T12:38:08.285128Z[0m [34mDEBUG[0m [2mbarter_integration::protocol::websocket[0m[2m:[0m failed to deserialize WebSocket Message into domain specific Message [3merror[0m[2m=[0mError("missing field `subscription_id`", line: 1, column: 106) [3mpayload[0m[2m=[0mUtf8Bytes(b"{\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"0402319e-93a7-4ab0-8b83-3d20832c1752\",\"req_id\":\"\",\"op\":\"ping\"}") [3maction[0m[2m=[0m"returning Some(Err(err))"
[2m2025-08-31T12:38:08.285289Z[0m [33m WARN[0m [2msimple_test_all_exchanges[0m[2m:[0m Stream error [3merror[0m[2m=[0mSocket("Deserialising JSON error: missing field `subscription_id` at line 1 column 94 for payload: {\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"dfd416ec-0083-49ac-a67b-c2b2a77195b6\",\"op\":\"ping\"}")
[2m2025-08-31T12:38:08.285319Z[0m [33m WARN[0m [2msimple_test_all_exchanges[0m[2m:[0m Stream error [3merror[0m[2m=[0mSocket("Deserialising JSON error: missing field `subscription_id` at line 1 column 106 for payload: {\"success\":true,\"ret_msg\":\"pong\",\"conn_id\":\"0402319e-93a7-4ab0-8b83-3d20832c1752\",\"req_id\":\"\",\"op\":\"ping\"}")
[2m2025-08-31T12:38:09.091532Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1400 | Time: 15s | Rate: 93.3/s
[2m2025-08-31T12:38:09.091589Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4478.58, Amount: 0.0012, Side: Sell
[2m2025-08-31T12:38:09.105062Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1500 | Time: 15s | Rate: 100.0/s
[2m2025-08-31T12:38:09.105117Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4475.34, Amount: 0.0100, Side: Sell
[2m2025-08-31T12:38:09.120266Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1600 | Time: 15s | Rate: 106.7/s
[2m2025-08-31T12:38:09.120315Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4475.05, Amount: 125.7800, Side: Sell
[2m2025-08-31T12:38:09.248016Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1700 | Time: 16s | Rate: 106.2/s
[2m2025-08-31T12:38:09.248075Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4475.36, Amount: 0.0100, Side: Sell
[2m2025-08-31T12:38:10.437182Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1800 | Time: 17s | Rate: 105.9/s
[2m2025-08-31T12:38:10.437238Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $108415.87, Amount: 0.0001, Side: Buy
[2m2025-08-31T12:38:10.707678Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 1900 | Time: 17s | Rate: 111.8/s
[2m2025-08-31T12:38:10.707735Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4477.98, Amount: 0.0012, Side: Sell
[2m2025-08-31T12:38:10.757979Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 2000 | Time: 17s | Rate: 117.6/s
[2m2025-08-31T12:38:10.758037Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4475.01, Amount: 0.1000, Side: Sell
[2m2025-08-31T12:38:11.560047Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Events: 2100 | Time: 18s | Rate: 116.7/s
[2m2025-08-31T12:38:11.560100Z[0m [32m INFO[0m [2msimple_test_all_exchanges[0m[2m:[0m Sample Trade - Price: $4477.62, Amount: 0.0447, Side: Sell
