user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Custom log format including Cloudflare headers
    log_format cloudflare '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_cf_ray" "$http_cf_connecting_ip" '
                         '"$http_cf_ipcountry" "$http_cf_visitor"';

    access_log /var/log/nginx/access.log cloudflare;

    # Cloudflare IP ranges (IPv4)
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;

    # Cloudflare IP ranges (IPv6)
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;

    # Use CF-Connecting-IP for real IP
    real_ip_header CF-Connecting-IP;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml;

    # Rate limiting zones (Cloudflare already provides DDoS protection)
    limit_req_zone $http_cf_connecting_ip zone=api_limit:10m rate=30r/s;
    limit_req_zone $http_cf_connecting_ip zone=ws_limit:10m rate=10r/s;
    limit_conn_zone $http_cf_connecting_ip zone=conn_limit:10m;

    # Upstream definitions
    upstream crypto_monitor_api {
        least_conn;
        server crypto-monitor:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream crypto_monitor_ws {
        ip_hash;
        server crypto-monitor:8081 max_fails=3 fail_timeout=30s;
    }

    # Map to determine if request is from Cloudflare
    map $http_cf_ray $is_cloudflare {
        default 0;
        "~." 1;
    }

    # Main server block
    server {
        listen 80 default_server;
        server_name _;

        # Only allow Cloudflare traffic
        if ($is_cloudflare = 0) {
            return 403;
        }

        # Security headers (Cloudflare will add more)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # API endpoints
        location /api/ {
            limit_req zone=api_limit burst=50 nodelay;
            limit_conn conn_limit 100;
            
            proxy_pass http://crypto_monitor_api;
            proxy_http_version 1.1;
            
            # Headers for backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cloudflare specific headers
            proxy_set_header CF-Ray $http_cf_ray;
            proxy_set_header CF-Visitor $http_cf_visitor;
            proxy_set_header CF-IPCountry $http_cf_ipcountry;
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            
            # Connection settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
            
            # Keep-alive
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # WebSocket endpoint
        location /ws {
            limit_req zone=ws_limit burst=10 nodelay;
            limit_conn conn_limit 50;
            
            proxy_pass http://crypto_monitor_ws;
            proxy_http_version 1.1;
            
            # WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cloudflare headers
            proxy_set_header CF-Ray $http_cf_ray;
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            
            # WebSocket timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Disable buffering for WebSocket
            proxy_buffering off;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://crypto_monitor_api/health;
            access_log off;
            
            # Allow health checks from internal network
            allow 172.0.0.0/8;
            allow 10.0.0.0/8;
            allow 127.0.0.1;
            # Also allow from Cloudflare for monitoring
            allow all;
        }

        # Metrics endpoint (restricted)
        location /metrics {
            # Only allow from Cloudflare Workers or internal
            if ($http_cf_worker != "1") {
                set $auth_check 1;
            }
            if ($remote_addr ~* "^(172\.|10\.|127\.)") {
                set $auth_check 0;
            }
            if ($auth_check = 1) {
                return 403;
            }
            
            proxy_pass http://crypto_monitor_api/metrics;
        }

        # Static files
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
            
            # Enable Cloudflare caching
            add_header CF-Cache-Status "HIT";
        }

        # Admin area (extra security)
        location /admin/ {
            # Check for admin header from Cloudflare Access
            if ($http_cf_access_authenticated_user_email = "") {
                return 403;
            }
            
            proxy_pass http://crypto_monitor_api/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Admin-Email $http_cf_access_authenticated_user_email;
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Root
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            
            # Cache control for static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 30d;
                add_header Cache-Control "public, immutable";
            }
        }

        # Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # Server block for direct IP access (block it)
    server {
        listen 80;
        server_name ~^[0-9.]+$;
        return 444;
    }
}